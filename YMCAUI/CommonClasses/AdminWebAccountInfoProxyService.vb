'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5446
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=2.0.50727.3038.
'

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code"), _
 System.Web.Services.WebServiceBindingAttribute(Name:="YMCAServiceSoap", [Namespace]:="http://tempuri.org/")> _
Partial Public Class AdminWebAccountInfoProxyService
    Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

    Private wLoginOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_ForgotPassGetDataOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_ForgotPassSendEmailOperationCompleted As System.Threading.SendOrPostCallback

    Private wForgotPassOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_AuthTokenLogoutOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_setUnLockAccountACOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_setLockAccountACOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_getAdminAcctivityOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_getAdminDataOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_SaveProfileSimpleOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_SaveProfileOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_ValidateUserSsnOrFundidAndDobOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_GetUserInfoOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_LogonOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_LoginUserInfoOperationCompleted As System.Threading.SendOrPostCallback

    Private NS_RegisterOperationCompleted As System.Threading.SendOrPostCallback

    '''<remarks/>
    Public Sub New()
        MyBase.New()
        Me.Url = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings("WebAcctInfo_WS_Path")).Trim()
    End Sub

    '''<remarks/>
    Public Event wLoginCompleted As wLoginCompletedEventHandler

    '''<remarks/>
    Public Event NS_ForgotPassGetDataCompleted As NS_ForgotPassGetDataCompletedEventHandler

    '''<remarks/>
    Public Event NS_ForgotPassSendEmailCompleted As NS_ForgotPassSendEmailCompletedEventHandler

    '''<remarks/>
    Public Event wForgotPassCompleted As wForgotPassCompletedEventHandler

    '''<remarks/>
    Public Event NS_AuthTokenLogoutCompleted As NS_AuthTokenLogoutCompletedEventHandler

    '''<remarks/>
    Public Event NS_setUnLockAccountACCompleted As NS_setUnLockAccountACCompletedEventHandler

    '''<remarks/>
    Public Event NS_setLockAccountACCompleted As NS_setLockAccountACCompletedEventHandler

    '''<remarks/>
    Public Event NS_getAdminAcctivityCompleted As NS_getAdminAcctivityCompletedEventHandler

    '''<remarks/>
    Public Event NS_getAdminDataCompleted As NS_getAdminDataCompletedEventHandler

    '''<remarks/>
    Public Event NS_SaveProfileSimpleCompleted As NS_SaveProfileSimpleCompletedEventHandler

    '''<remarks/>
    Public Event NS_SaveProfileCompleted As NS_SaveProfileCompletedEventHandler

    '''<remarks/>
    Public Event NS_ValidateUserSsnOrFundidAndDobCompleted As NS_ValidateUserSsnOrFundidAndDobCompletedEventHandler

    '''<remarks/>
    Public Event NS_GetUserInfoCompleted As NS_GetUserInfoCompletedEventHandler

    '''<remarks/>
    Public Event NS_LogonCompleted As NS_LogonCompletedEventHandler

    '''<remarks/>
    Public Event NS_LoginUserInfoCompleted As NS_LoginUserInfoCompletedEventHandler

    '''<remarks/>
    Public Event NS_RegisterCompleted As NS_RegisterCompletedEventHandler

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wLogin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function wLogin(ByVal encxml As String) As String
        Dim results() As Object = Me.Invoke("wLogin", New Object() {encxml})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginwLogin(ByVal encxml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("wLogin", New Object() {encxml}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndwLogin(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub wLoginAsync(ByVal encxml As String)
        Me.wLoginAsync(encxml, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub wLoginAsync(ByVal encxml As String, ByVal userState As Object)
        If (Me.wLoginOperationCompleted Is Nothing) Then
            Me.wLoginOperationCompleted = AddressOf Me.OnwLoginOperationCompleted
        End If
        Me.InvokeAsync("wLogin", New Object() {encxml}, Me.wLoginOperationCompleted, userState)
    End Sub

    Private Sub OnwLoginOperationCompleted(ByVal arg As Object)
        If (Not (Me.wLoginCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent wLoginCompleted(Me, New wLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_ForgotPassGetData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_ForgotPassGetData(ByVal fundid As String, ByVal ssn As String, ByVal dob As String) As String
        Dim results() As Object = Me.Invoke("NS_ForgotPassGetData", New Object() {fundid, ssn, dob})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_ForgotPassGetData(ByVal fundid As String, ByVal ssn As String, ByVal dob As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_ForgotPassGetData", New Object() {fundid, ssn, dob}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_ForgotPassGetData(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_ForgotPassGetDataAsync(ByVal fundid As String, ByVal ssn As String, ByVal dob As String)
        Me.NS_ForgotPassGetDataAsync(fundid, ssn, dob, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_ForgotPassGetDataAsync(ByVal fundid As String, ByVal ssn As String, ByVal dob As String, ByVal userState As Object)
        If (Me.NS_ForgotPassGetDataOperationCompleted Is Nothing) Then
            Me.NS_ForgotPassGetDataOperationCompleted = AddressOf Me.OnNS_ForgotPassGetDataOperationCompleted
        End If
        Me.InvokeAsync("NS_ForgotPassGetData", New Object() {fundid, ssn, dob}, Me.NS_ForgotPassGetDataOperationCompleted, userState)
    End Sub

    Private Sub OnNS_ForgotPassGetDataOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_ForgotPassGetDataCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_ForgotPassGetDataCompleted(Me, New NS_ForgotPassGetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_ForgotPassSendEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_ForgotPassSendEmail(ByVal userid As String, ByVal updateUser As String) As String
        Dim results() As Object = Me.Invoke("NS_ForgotPassSendEmail", New Object() {userid, updateUser})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_ForgotPassSendEmail(ByVal userid As String, ByVal updateUser As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_ForgotPassSendEmail", New Object() {userid, updateUser}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_ForgotPassSendEmail(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_ForgotPassSendEmailAsync(ByVal userid As String, ByVal updateUser As String)
        Me.NS_ForgotPassSendEmailAsync(userid, updateUser, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_ForgotPassSendEmailAsync(ByVal userid As String, ByVal updateUser As String, ByVal userState As Object)
        If (Me.NS_ForgotPassSendEmailOperationCompleted Is Nothing) Then
            Me.NS_ForgotPassSendEmailOperationCompleted = AddressOf Me.OnNS_ForgotPassSendEmailOperationCompleted
        End If
        Me.InvokeAsync("NS_ForgotPassSendEmail", New Object() {userid, updateUser}, Me.NS_ForgotPassSendEmailOperationCompleted, userState)
    End Sub

    Private Sub OnNS_ForgotPassSendEmailOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_ForgotPassSendEmailCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_ForgotPassSendEmailCompleted(Me, New NS_ForgotPassSendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wForgotPass", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function wForgotPass(ByVal encxml As String) As String
        Dim results() As Object = Me.Invoke("wForgotPass", New Object() {encxml})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginwForgotPass(ByVal encxml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("wForgotPass", New Object() {encxml}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndwForgotPass(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub wForgotPassAsync(ByVal encxml As String)
        Me.wForgotPassAsync(encxml, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub wForgotPassAsync(ByVal encxml As String, ByVal userState As Object)
        If (Me.wForgotPassOperationCompleted Is Nothing) Then
            Me.wForgotPassOperationCompleted = AddressOf Me.OnwForgotPassOperationCompleted
        End If
        Me.InvokeAsync("wForgotPass", New Object() {encxml}, Me.wForgotPassOperationCompleted, userState)
    End Sub

    Private Sub OnwForgotPassOperationCompleted(ByVal arg As Object)
        If (Not (Me.wForgotPassCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent wForgotPassCompleted(Me, New wForgotPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_AuthTokenLogout", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_AuthTokenLogout(ByVal inputxml As String) As String
        Dim results() As Object = Me.Invoke("NS_AuthTokenLogout", New Object() {inputxml})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_AuthTokenLogout(ByVal inputxml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_AuthTokenLogout", New Object() {inputxml}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_AuthTokenLogout(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_AuthTokenLogoutAsync(ByVal inputxml As String)
        Me.NS_AuthTokenLogoutAsync(inputxml, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_AuthTokenLogoutAsync(ByVal inputxml As String, ByVal userState As Object)
        If (Me.NS_AuthTokenLogoutOperationCompleted Is Nothing) Then
            Me.NS_AuthTokenLogoutOperationCompleted = AddressOf Me.OnNS_AuthTokenLogoutOperationCompleted
        End If
        Me.InvokeAsync("NS_AuthTokenLogout", New Object() {inputxml}, Me.NS_AuthTokenLogoutOperationCompleted, userState)
    End Sub

    Private Sub OnNS_AuthTokenLogoutOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_AuthTokenLogoutCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_AuthTokenLogoutCompleted(Me, New NS_AuthTokenLogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_setUnLockAccountAC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_setUnLockAccountAC(ByVal userID As String, ByVal updater As String) As String
        Dim results() As Object = Me.Invoke("NS_setUnLockAccountAC", New Object() {userID, updater})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_setUnLockAccountAC(ByVal userID As String, ByVal updater As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_setUnLockAccountAC", New Object() {userID, updater}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_setUnLockAccountAC(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_setUnLockAccountACAsync(ByVal userID As String, ByVal updater As String)
        Me.NS_setUnLockAccountACAsync(userID, updater, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_setUnLockAccountACAsync(ByVal userID As String, ByVal updater As String, ByVal userState As Object)
        If (Me.NS_setUnLockAccountACOperationCompleted Is Nothing) Then
            Me.NS_setUnLockAccountACOperationCompleted = AddressOf Me.OnNS_setUnLockAccountACOperationCompleted
        End If
        Me.InvokeAsync("NS_setUnLockAccountAC", New Object() {userID, updater}, Me.NS_setUnLockAccountACOperationCompleted, userState)
    End Sub

    Private Sub OnNS_setUnLockAccountACOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_setUnLockAccountACCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_setUnLockAccountACCompleted(Me, New NS_setUnLockAccountACCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_setLockAccountAC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_setLockAccountAC(ByVal userID As String, ByVal updater As String) As String
        Dim results() As Object = Me.Invoke("NS_setLockAccountAC", New Object() {userID, updater})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_setLockAccountAC(ByVal userID As String, ByVal updater As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_setLockAccountAC", New Object() {userID, updater}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_setLockAccountAC(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_setLockAccountACAsync(ByVal userID As String, ByVal updater As String)
        Me.NS_setLockAccountACAsync(userID, updater, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_setLockAccountACAsync(ByVal userID As String, ByVal updater As String, ByVal userState As Object)
        If (Me.NS_setLockAccountACOperationCompleted Is Nothing) Then
            Me.NS_setLockAccountACOperationCompleted = AddressOf Me.OnNS_setLockAccountACOperationCompleted
        End If
        Me.InvokeAsync("NS_setLockAccountAC", New Object() {userID, updater}, Me.NS_setLockAccountACOperationCompleted, userState)
    End Sub

    Private Sub OnNS_setLockAccountACOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_setLockAccountACCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_setLockAccountACCompleted(Me, New NS_setLockAccountACCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_getAdminAcctivity", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_getAdminAcctivity(ByVal userID As String) As System.Data.DataSet
        Dim results() As Object = Me.Invoke("NS_getAdminAcctivity", New Object() {userID})
        Return CType(results(0), System.Data.DataSet)
    End Function

    '''<remarks/>
    Public Function BeginNS_getAdminAcctivity(ByVal userID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_getAdminAcctivity", New Object() {userID}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_getAdminAcctivity(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), System.Data.DataSet)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_getAdminAcctivityAsync(ByVal userID As String)
        Me.NS_getAdminAcctivityAsync(userID, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_getAdminAcctivityAsync(ByVal userID As String, ByVal userState As Object)
        If (Me.NS_getAdminAcctivityOperationCompleted Is Nothing) Then
            Me.NS_getAdminAcctivityOperationCompleted = AddressOf Me.OnNS_getAdminAcctivityOperationCompleted
        End If
        Me.InvokeAsync("NS_getAdminAcctivity", New Object() {userID}, Me.NS_getAdminAcctivityOperationCompleted, userState)
    End Sub

    Private Sub OnNS_getAdminAcctivityOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_getAdminAcctivityCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_getAdminAcctivityCompleted(Me, New NS_getAdminAcctivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_getAdminData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_getAdminData(ByVal userID As String) As String
        Dim results() As Object = Me.Invoke("NS_getAdminData", New Object() {userID})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_getAdminData(ByVal userID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_getAdminData", New Object() {userID}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_getAdminData(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_getAdminDataAsync(ByVal userID As String)
        Me.NS_getAdminDataAsync(userID, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_getAdminDataAsync(ByVal userID As String, ByVal userState As Object)
        If (Me.NS_getAdminDataOperationCompleted Is Nothing) Then
            Me.NS_getAdminDataOperationCompleted = AddressOf Me.OnNS_getAdminDataOperationCompleted
        End If
        Me.InvokeAsync("NS_getAdminData", New Object() {userID}, Me.NS_getAdminDataOperationCompleted, userState)
    End Sub

    Private Sub OnNS_getAdminDataOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_getAdminDataCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_getAdminDataCompleted(Me, New NS_getAdminDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_SaveProfileSimple", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_SaveProfileSimple(ByVal userid As String, ByVal oldPass As String, ByVal newPass As String, ByVal updateUser As String) As String
        Dim results() As Object = Me.Invoke("NS_SaveProfileSimple", New Object() {userid, oldPass, newPass, updateUser})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_SaveProfileSimple(ByVal userid As String, ByVal oldPass As String, ByVal newPass As String, ByVal updateUser As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_SaveProfileSimple", New Object() {userid, oldPass, newPass, updateUser}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_SaveProfileSimple(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_SaveProfileSimpleAsync(ByVal userid As String, ByVal oldPass As String, ByVal newPass As String, ByVal updateUser As String)
        Me.NS_SaveProfileSimpleAsync(userid, oldPass, newPass, updateUser, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_SaveProfileSimpleAsync(ByVal userid As String, ByVal oldPass As String, ByVal newPass As String, ByVal updateUser As String, ByVal userState As Object)
        If (Me.NS_SaveProfileSimpleOperationCompleted Is Nothing) Then
            Me.NS_SaveProfileSimpleOperationCompleted = AddressOf Me.OnNS_SaveProfileSimpleOperationCompleted
        End If
        Me.InvokeAsync("NS_SaveProfileSimple", New Object() {userid, oldPass, newPass, updateUser}, Me.NS_SaveProfileSimpleOperationCompleted, userState)
    End Sub

    Private Sub OnNS_SaveProfileSimpleOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_SaveProfileSimpleCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_SaveProfileSimpleCompleted(Me, New NS_SaveProfileSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_SaveProfile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_SaveProfile(ByVal userid As String, ByVal username As String, ByVal updateUser As String, ByVal password As String, ByVal oldPass As String, ByVal questionID As Integer, ByVal answer As String, ByVal email As String, ByVal sendemail As Boolean) As String
        Dim results() As Object = Me.Invoke("NS_SaveProfile", New Object() {userid, username, updateUser, password, oldPass, questionID, answer, email, sendemail})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_SaveProfile(ByVal userid As String, ByVal username As String, ByVal updateUser As String, ByVal password As String, ByVal oldPass As String, ByVal questionID As Integer, ByVal answer As String, ByVal email As String, ByVal sendemail As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_SaveProfile", New Object() {userid, username, updateUser, password, oldPass, questionID, answer, email, sendemail}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_SaveProfile(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_SaveProfileAsync(ByVal userid As String, ByVal username As String, ByVal updateUser As String, ByVal password As String, ByVal oldPass As String, ByVal questionID As Integer, ByVal answer As String, ByVal email As String, ByVal sendemail As Boolean)
        Me.NS_SaveProfileAsync(userid, username, updateUser, password, oldPass, questionID, answer, email, sendemail, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_SaveProfileAsync(ByVal userid As String, ByVal username As String, ByVal updateUser As String, ByVal password As String, ByVal oldPass As String, ByVal questionID As Integer, ByVal answer As String, ByVal email As String, ByVal sendemail As Boolean, ByVal userState As Object)
        If (Me.NS_SaveProfileOperationCompleted Is Nothing) Then
            Me.NS_SaveProfileOperationCompleted = AddressOf Me.OnNS_SaveProfileOperationCompleted
        End If
        Me.InvokeAsync("NS_SaveProfile", New Object() {userid, username, updateUser, password, oldPass, questionID, answer, email, sendemail}, Me.NS_SaveProfileOperationCompleted, userState)
    End Sub

    Private Sub OnNS_SaveProfileOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_SaveProfileCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_SaveProfileCompleted(Me, New NS_SaveProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_ValidateUserSsnOrFundidAndDob", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_ValidateUserSsnOrFundidAndDob(ByVal inputParam As String) As String
        Dim results() As Object = Me.Invoke("NS_ValidateUserSsnOrFundidAndDob", New Object() {inputParam})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_ValidateUserSsnOrFundidAndDob(ByVal inputParam As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_ValidateUserSsnOrFundidAndDob", New Object() {inputParam}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_ValidateUserSsnOrFundidAndDob(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_ValidateUserSsnOrFundidAndDobAsync(ByVal inputParam As String)
        Me.NS_ValidateUserSsnOrFundidAndDobAsync(inputParam, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_ValidateUserSsnOrFundidAndDobAsync(ByVal inputParam As String, ByVal userState As Object)
        If (Me.NS_ValidateUserSsnOrFundidAndDobOperationCompleted Is Nothing) Then
            Me.NS_ValidateUserSsnOrFundidAndDobOperationCompleted = AddressOf Me.OnNS_ValidateUserSsnOrFundidAndDobOperationCompleted
        End If
        Me.InvokeAsync("NS_ValidateUserSsnOrFundidAndDob", New Object() {inputParam}, Me.NS_ValidateUserSsnOrFundidAndDobOperationCompleted, userState)
    End Sub

    Private Sub OnNS_ValidateUserSsnOrFundidAndDobOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_ValidateUserSsnOrFundidAndDobCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_ValidateUserSsnOrFundidAndDobCompleted(Me, New NS_ValidateUserSsnOrFundidAndDobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_GetUserInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_GetUserInfo(ByVal userid As String) As String
        Dim results() As Object = Me.Invoke("NS_GetUserInfo", New Object() {userid})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_GetUserInfo(ByVal userid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_GetUserInfo", New Object() {userid}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_GetUserInfo(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_GetUserInfoAsync(ByVal userid As String)
        Me.NS_GetUserInfoAsync(userid, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_GetUserInfoAsync(ByVal userid As String, ByVal userState As Object)
        If (Me.NS_GetUserInfoOperationCompleted Is Nothing) Then
            Me.NS_GetUserInfoOperationCompleted = AddressOf Me.OnNS_GetUserInfoOperationCompleted
        End If
        Me.InvokeAsync("NS_GetUserInfo", New Object() {userid}, Me.NS_GetUserInfoOperationCompleted, userState)
    End Sub

    Private Sub OnNS_GetUserInfoOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_GetUserInfoCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_GetUserInfoCompleted(Me, New NS_GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_Logon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_Logon(ByVal username As String, ByVal password As String) As String
        Dim results() As Object = Me.Invoke("NS_Logon", New Object() {username, password})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_Logon(ByVal username As String, ByVal password As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_Logon", New Object() {username, password}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_Logon(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_LogonAsync(ByVal username As String, ByVal password As String)
        Me.NS_LogonAsync(username, password, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_LogonAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
        If (Me.NS_LogonOperationCompleted Is Nothing) Then
            Me.NS_LogonOperationCompleted = AddressOf Me.OnNS_LogonOperationCompleted
        End If
        Me.InvokeAsync("NS_Logon", New Object() {username, password}, Me.NS_LogonOperationCompleted, userState)
    End Sub

    Private Sub OnNS_LogonOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_LogonCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_LogonCompleted(Me, New NS_LogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_LoginUserInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_LoginUserInfo(ByVal sessionid As String, ByVal username As String, ByVal password As String, ByVal userid As String) As String
        Dim results() As Object = Me.Invoke("NS_LoginUserInfo", New Object() {sessionid, username, password, userid})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_LoginUserInfo(ByVal sessionid As String, ByVal username As String, ByVal password As String, ByVal userid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_LoginUserInfo", New Object() {sessionid, username, password, userid}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_LoginUserInfo(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_LoginUserInfoAsync(ByVal sessionid As String, ByVal username As String, ByVal password As String, ByVal userid As String)
        Me.NS_LoginUserInfoAsync(sessionid, username, password, userid, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_LoginUserInfoAsync(ByVal sessionid As String, ByVal username As String, ByVal password As String, ByVal userid As String, ByVal userState As Object)
        If (Me.NS_LoginUserInfoOperationCompleted Is Nothing) Then
            Me.NS_LoginUserInfoOperationCompleted = AddressOf Me.OnNS_LoginUserInfoOperationCompleted
        End If
        Me.InvokeAsync("NS_LoginUserInfo", New Object() {sessionid, username, password, userid}, Me.NS_LoginUserInfoOperationCompleted, userState)
    End Sub

    Private Sub OnNS_LoginUserInfoOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_LoginUserInfoCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_LoginUserInfoCompleted(Me, New NS_LoginUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NS_Register", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function NS_Register(ByVal userid As String, ByVal username As String, ByVal password As String, ByVal questionId As Integer, ByVal answer As String, ByVal email As String) As String
        Dim results() As Object = Me.Invoke("NS_Register", New Object() {userid, username, password, questionId, answer, email})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginNS_Register(ByVal userid As String, ByVal username As String, ByVal password As String, ByVal questionId As Integer, ByVal answer As String, ByVal email As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("NS_Register", New Object() {userid, username, password, questionId, answer, email}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndNS_Register(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub NS_RegisterAsync(ByVal userid As String, ByVal username As String, ByVal password As String, ByVal questionId As Integer, ByVal answer As String, ByVal email As String)
        Me.NS_RegisterAsync(userid, username, password, questionId, answer, email, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub NS_RegisterAsync(ByVal userid As String, ByVal username As String, ByVal password As String, ByVal questionId As Integer, ByVal answer As String, ByVal email As String, ByVal userState As Object)
        If (Me.NS_RegisterOperationCompleted Is Nothing) Then
            Me.NS_RegisterOperationCompleted = AddressOf Me.OnNS_RegisterOperationCompleted
        End If
        Me.InvokeAsync("NS_Register", New Object() {userid, username, password, questionId, answer, email}, Me.NS_RegisterOperationCompleted, userState)
    End Sub

    Private Sub OnNS_RegisterOperationCompleted(ByVal arg As Object)
        If (Not (Me.NS_RegisterCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent NS_RegisterCompleted(Me, New NS_RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    Public Shadows Sub CancelAsync(ByVal userState As Object)
        MyBase.CancelAsync(userState)
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub wLoginCompletedEventHandler(ByVal sender As Object, ByVal e As wLoginCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class wLoginCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_ForgotPassGetDataCompletedEventHandler(ByVal sender As Object, ByVal e As NS_ForgotPassGetDataCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_ForgotPassGetDataCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_ForgotPassSendEmailCompletedEventHandler(ByVal sender As Object, ByVal e As NS_ForgotPassSendEmailCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_ForgotPassSendEmailCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub wForgotPassCompletedEventHandler(ByVal sender As Object, ByVal e As wForgotPassCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class wForgotPassCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_AuthTokenLogoutCompletedEventHandler(ByVal sender As Object, ByVal e As NS_AuthTokenLogoutCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_AuthTokenLogoutCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_setUnLockAccountACCompletedEventHandler(ByVal sender As Object, ByVal e As NS_setUnLockAccountACCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_setUnLockAccountACCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_setLockAccountACCompletedEventHandler(ByVal sender As Object, ByVal e As NS_setLockAccountACCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_setLockAccountACCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_getAdminAcctivityCompletedEventHandler(ByVal sender As Object, ByVal e As NS_getAdminAcctivityCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_getAdminAcctivityCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As System.Data.DataSet
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),System.Data.DataSet)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_getAdminDataCompletedEventHandler(ByVal sender As Object, ByVal e As NS_getAdminDataCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_getAdminDataCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_SaveProfileSimpleCompletedEventHandler(ByVal sender As Object, ByVal e As NS_SaveProfileSimpleCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_SaveProfileSimpleCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_SaveProfileCompletedEventHandler(ByVal sender As Object, ByVal e As NS_SaveProfileCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_SaveProfileCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_ValidateUserSsnOrFundidAndDobCompletedEventHandler(ByVal sender As Object, ByVal e As NS_ValidateUserSsnOrFundidAndDobCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_ValidateUserSsnOrFundidAndDobCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_GetUserInfoCompletedEventHandler(ByVal sender As Object, ByVal e As NS_GetUserInfoCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_GetUserInfoCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_LogonCompletedEventHandler(ByVal sender As Object, ByVal e As NS_LogonCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_LogonCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_LoginUserInfoCompletedEventHandler(ByVal sender As Object, ByVal e As NS_LoginUserInfoCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_LoginUserInfoCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub NS_RegisterCompletedEventHandler(ByVal sender As Object, ByVal e As NS_RegisterCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class NS_RegisterCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class
