<?xml version="1.0" encoding="utf-8"?>
<exceptionHandling>
  <exceptionPolicies>
    <add name="Exception Policy">
      <exceptionTypes>
        <add type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
          postHandlingAction="NotifyRethrow" name="Exception">
          <exceptionHandlers>
            <add logCategory="Exception" eventId="100" severity="Error" title="Enterprise Library Exception Handling"
              formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
              priority="0" useDefaultLogger="true" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
              name="Logging Handler" />
            <add exceptionMessage="Server Not Responding" exceptionMessageResourceType="Microsoft.SqlServer.Server.SystemDataAccessKind, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
              exceptionMessageResourceName="Server Not Responding" wrapExceptionType="System.Data.DBConcurrencyException, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
              type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.414.00, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
              name="Wrap Handler" />
          </exceptionHandlers>
        </add>
      </exceptionTypes>
    </add>
  </exceptionPolicies>
</exceptionHandling>